# This file is executed inside Docker build container.
# It can be used without container too if SDK_PATH and V7_PATH are configured.

SDK_PATH ?= /cc3200-sdk
V7_PATH ?= ../../../v7
SMARTJS_PATH ?= ../..
OBJDIR = build
BINDIR = firmware

include ${SDK_PATH}/tools/gcc_scripts/makedefs

.PHONY: all clean flash

PROG = smartjs

IPATH = ${SDK_PATH} \
        ${SDK_PATH}/inc \
        ${SDK_PATH}/driverlib \
        ${SMARTJS_PATH}/src \
        ${V7_PATH}

VPATH = ${SDK_PATH}/example/common \
        ${SMARTJS_PATH}/src \
        ${V7_PATH}

V7_FEATURES = -DV7_BUILD_PROFILE=1 \
              -DV7_DISABLE_AST_TAG_NAMES -DV7_ENABLE_GC \
              -DV7_ENABLE_COMPACTING_GC -DDISABLE_MD5 -DNO_LIBC \
              -DV7_ENABLE__Math -DV7_ENABLE__Math__random \
              -DV7_ENABLE__Memory__stats -DV7_FORCE_STRICT_MODE \
              -DV7_NO_FS

# -DV7_TEMP_OFF
#-DV7_ENABLE_FILE -DV7_ESP_GDB_SERVER \
#-DV7_ENABLE_SPIFFS \
#-DV7_ESP_FLASH_ACCESS_EMUL

V7_MEMORY_FLAGS = -DMBUF_SIZE_MULTIPLIER=1 \
                  -DV7_STACK_SIZE=8192 -DV7_DISABLE_INTERPRETER_STACK_CHECK \
                  -DFS_MAX_OPEN_FILES=5

CFLAGS += -DUSE_FREERTOS ${V7_FEATURES} ${V7_MEMORY_FLAGS} -Dc_file_t=int -Os

.PHONY: all clean flash

all: ${OBJDIR} ${BINDIR}
all: ${BINDIR}/${PROG}.axf

clean:
	@rm -rf ${OBJDIR} ${wildcard *~}
	@rm -rf ${BINDIR} ${wildcard *~}

${OBJDIR}:
	@mkdir -p ${OBJDIR}

${BINDIR}:
	@mkdir -p ${BINDIR}

${BINDIR}/${PROG}.axf: ${OBJDIR}/main.o
${BINDIR}/${PROG}.axf: ${OBJDIR}/libc_replacements.o ${OBJDIR}/v7.o
${BINDIR}/${PROG}.axf: ${OBJDIR}/sj_prompt.o ${OBJDIR}/sj_hal_cc3200.o
${BINDIR}/${PROG}.axf: ${OBJDIR}/startup_${COMPILER}.o
${BINDIR}/${PROG}.axf: ${SDK_PATH}/driverlib/${COMPILER}/exe/libdriver.a
${BINDIR}/${PROG}.axf: ${SDK_PATH}/oslib/${COMPILER}/exe/FreeRTOS.a
SCATTERgcc_${PROG} = ${PROG}.ld
ENTRY_${PROG} = ResetISR
