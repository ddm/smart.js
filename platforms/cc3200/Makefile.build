# This file is executed inside Docker build container.
# It can be used without container too if SDK_PATH and V7_PATH are configured.

SDK_PATH ?= /cc3200-sdk
V7_PATH ?= ../../../v7
SMARTJS_PATH ?= ../..
MONGOOSE_PATH ?= ../../../mongoose
OBJDIR = build
BINDIR = firmware
FW_FS_SIZE = 65536
SMARTJS_SRC ?= $(SMARTJS_PATH)/src
SJSJS_PATH ?= $(SMARTJS_SRC)/js
FS_DIR = fs
FS_BUILD_DIR = $(OBJDIR)/fs

include ${SDK_PATH}/tools/gcc_scripts/makedefs

.PHONY: all clean flash

PROG = smartjs

JS_SRCS    := $(SJSJS_PATH)/clubby.js $(SJSJS_PATH)/sys_rts.js \
              $(SJSJS_PATH)/cloud.js $(SJSJS_PATH)/swupdate.js \
              $(SJSJS_PATH)/MCXXX_LCD.js $(SJSJS_PATH)/I2C.js \
              $(JSBIN_EXTRA) $(SJSJS_PATH)/smart.js $(SJSJS_PATH)/demo.js \
              $(SJSJS_PATH)/user.js

JSBIN_EXT := js
JS_EXT := js

IPATH = . ${SDK_PATH} \
        ${SDK_PATH}/inc \
        ${SDK_PATH}/driverlib \
        ${SDK_PATH}/oslib \
        ${SDK_PATH}/simplelink \
        ${SDK_PATH}/simplelink/include \
        ${SDK_PATH}/third_party/FreeRTOS/source/include \
        ${SDK_PATH}/third_party/FreeRTOS/source/portable/GCC/ARM_CM4 \
        ${SMARTJS_PATH}/src \
        ${SMARTJS_PATH}/src/spiffs \
        ${MONGOOSE_PATH} \
        ${V7_PATH}

VPATH = ${SDK_PATH}/driverlib \
        ${SDK_PATH}/oslib \
        ${SDK_PATH}/simplelink \
        ${SDK_PATH}/simplelink/source \
        ${SDK_PATH}/third_party/FreeRTOS/source \
        ${SDK_PATH}/third_party/FreeRTOS/source/portable/GCC/ARM_CM4 \
        ${SDK_PATH}/third_party/FreeRTOS/source/portable/MemMang \
        ${SMARTJS_PATH}/src \
        ${SMARTJS_PATH}/src/spiffs \
        ${V7_PATH} \
        ${MONGOOSE_PATH}

V7_FEATURES = -DV7_BUILD_PROFILE=1 -DV7_DISABLE_AST_TAG_NAMES \
              -DV7_ENABLE_COMPACTING_GC -DDISABLE_MD5 \
              -DV7_ENABLE__Math -DV7_ENABLE__Math__random \
              -DV7_ENABLE__Memory__stats -DV7_FORCE_STRICT_MODE \
              -DV7_ENABLE_FILE -DV7_ENABLE__StackTrace \


MONGOOSE_FEATURES = -DMG_CC3200 -DMG_DISABLE_DIRECTORY_LISTING -DMG_DISABLE_DAV \
                 -DMG_DISABLE_SSI -DMG_DISABLE_FILESYSTEM -DMG_DISABLE_SOCKETPAIR \
                 -DMG_DISABLE_CGI
#-DMG_ENABLE_DEBUG

# -DV7_TEMP_OFF
#-DV7_ENABLE_FILE -DV7_ESP_GDB_SERVER \
#-DV7_ENABLE_SPIFFS \
#-DV7_ESP_FLASH_ACCESS_EMUL

V7_MEMORY_FLAGS = -DMBUF_SIZE_MULTIPLIER=1 \
                  -DV7_STACK_SIZE=16384 -DV7_DISABLE_INTERPRETER_STACK_CHECK \
                  -DFS_MAX_OPEN_FILES=5

SDK_FLAGS = -DTARGET_IS_CC3200 -DUSE_FREERTOS -DSL_PLATFORM_MULTI_THREADED

DISABLED_SDK_WARNINGS = -Wno-missing-braces -Wno-strict-aliasing -Wno-parentheses -Wno-unused-variable

CFLAGS += -Os -Wall -Werror $(SDK_FLAGS) ${V7_FEATURES} ${V7_MEMORY_FLAGS} ${MONGOOSE_FEATURES} ${CFLAGS_EXTRA}
# CFLAGS += -DCC3200_FS_DEBUG

.PHONY: all clean flash

all: ${OBJDIR} ${BINDIR}
all: ${BINDIR}/${PROG}.axf ${BINDIR}/fs.img

clean:
	@rm -rf ${OBJDIR} ${wildcard *~}
	@rm -rf ${BINDIR} ${wildcard *~}

${OBJDIR}:
	@mkdir -p ${OBJDIR}

${BINDIR}:
	@mkdir -p ${BINDIR}

${OBJDIR}/mongoose.o: ${MONGOOSE_PATH}/mongoose.c
	${CC} ${CFLAGS} -DEXCLUDE_COMMON -D${COMPILER} -o ${@} ${<}

${BINDIR}/${PROG}.axf: ${OBJDIR}/main.o
${BINDIR}/${PROG}.axf: ${OBJDIR}/cc3200_fs.o ${OBJDIR}/cc3200_fs_spiffs.o ${OBJDIR}/cc3200_fs_spiffs_container.o ${OBJDIR}/cc3200_fs_failfs.o
${BINDIR}/${PROG}.axf: ${OBJDIR}/cc3200_leds.o ${OBJDIR}/cc3200_libc.o
${BINDIR}/${PROG}.axf: ${OBJDIR}/cc3200_sj_hal.o ${OBJDIR}/cc3200_socket.o ${OBJDIR}/cc3200_timers.o ${OBJDIR}/cc3200_wifi.o
${BINDIR}/${PROG}.axf: ${OBJDIR}/v7.o
${BINDIR}/${PROG}.axf: ${OBJDIR}/sj_i2c_js.o ${OBJDIR}/cc3200_i2c.o
${BINDIR}/${PROG}.axf: ${OBJDIR}/sj_simple_http.o ${OBJDIR}/sj_wifi.o ${OBJDIR}/sj_prompt.o
${BINDIR}/${PROG}.axf: ${OBJDIR}/sj_mongoose.o ${OBJDIR}/sj_mongoose_http_client.o ${OBJDIR}/sj_timers.o ${OBJDIR}/sj_v7_ext.o
${BINDIR}/${PROG}.axf: ${OBJDIR}/spiffs_cache.o ${OBJDIR}/spiffs_check.o ${OBJDIR}/spiffs_gc.o ${OBJDIR}/spiffs_hydrogen.o ${OBJDIR}/spiffs_nucleus.o
${BINDIR}/${PROG}.axf: ${OBJDIR}/mongoose.o
${BINDIR}/${PROG}.axf: ${OBJDIR}/startup_gcc.o
# FreeRTOS
${BINDIR}/${PROG}.axf: ${OBJDIR}/timers.o ${OBJDIR}/list.o ${OBJDIR}/queue.o ${OBJDIR}/tasks.o ${OBJDIR}/port.o ${OBJDIR}/heap_3.o
# OSLib
${BINDIR}/${PROG}.axf: ${OBJDIR}/osi_freertos.o
# SimpleLink
${BINDIR}/${PROG}.axf: ${OBJDIR}/socket.o ${OBJDIR}/wlan.o ${OBJDIR}/driver.o ${OBJDIR}/device.o ${OBJDIR}/netapp.o ${OBJDIR}/cc_pal.o ${OBJDIR}/fs.o
# DriverLib
${BINDIR}/${PROG}.axf: ${OBJDIR}/cpu.o ${OBJDIR}/gpio.o ${OBJDIR}/i2c.o ${OBJDIR}/interrupt.o ${OBJDIR}/pin.o ${OBJDIR}/prcm.o ${OBJDIR}/spi.o ${OBJDIR}/uart.o ${OBJDIR}/udma.o ${OBJDIR}/utils.o
SCATTERgcc_${PROG} = ${PROG}.ld
ENTRY_${PROG} = ResetISR

${BINDIR}/fs.img: ${wildcard fs/*} $(JS_SRCS)
	/usr/bin/rsync -r --copy-links $(FS_DIR)/ $(FS_BUILD_DIR)/
# OSX virtualbox shared folder have issues with some symlinks. JS_SRCS contains their canonical location
	$(Q) $(foreach js,$(JS_SRCS), \
		echo "CP $(js) -> $(FS_DIR)/$(basename $(notdir $(js))).$(JS_EXT)";\
		cp $(js) $(FS_BUILD_DIR);)
	/usr/local/bin/mkspiffs ${FW_FS_SIZE} fs > $@
	/usr/local/bin/mkspiffs ${FW_FS_SIZE} $(OBJDIR)/fs > $@

$(SMARTJS_SRC)/v7.c:
	make -C $(V7_PATH) v7.c
	ln -s ../../v7/v7.c $(SMARTJS_SRC)/v7.c

$(OBJDIR)/v7: $(SMARTJS_SRC)/v7.c $(SMARTJS_SRC)/v7.h
	@echo "GCC v7"
	$(Q) gcc -DV7_EXE -DV7_EXPOSE_PRIVATE $(SMARTJS_SRC)/v7.c -lm -o $(BUILD_DIR)/v7

# Target specific warning inhibitions

build/wlan.o: CFLAGS += $(DISABLED_SDK_WARNINGS)
build/driver.o: CFLAGS += $(DISABLED_SDK_WARNINGS)
build/fs.o: CFLAGS += $(DISABLED_SDK_WARNINGS)
build/spi.o: CFLAGS += $(DISABLED_SDK_WARNINGS)
build/prcm.o: CFLAGS += $(DISABLED_SDK_WARNINGS)
build/spiffs_hydrogen.o: CFLAGS += -Wno-unused-function
